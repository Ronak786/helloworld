
main.o：     文件格式 elf32-littlearm
main.o
体系结构：arm， 标志 0x00000011：
HAS_RELOC, HAS_SYMS
起始地址 0x00000000
私有标志 = 5000000： [Version5 EABI]

节：
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000f4  00000000  00000000  00000034  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .data         00000004  00000000  00000000  00000128  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00000000  00000000  0000012c  2**2
                  ALLOC
  3 .comment      00000022  00000000  00000000  0000012c  2**0
                  CONTENTS, READONLY
  4 .note.GNU-stack 00000000  00000000  00000000  0000014e  2**0
                  CONTENTS, READONLY
  5 .ARM.attributes 00000035  00000000  00000000  0000014e  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 main.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     O .bss	00000004 m_RandSeed
00000000 l     O .data	00000004 m_RandSeed1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 g     F .text	00000058 Rand
00000058 g     F .text	00000038 wait
00000090 g     F .text	00000064 main
00000000         *UND*	00000000 init_uart



Disassembly of section .text:

00000000 <Rand>:
   0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   4:	e28db000 	add	fp, sp, #0
   8:	e3003000 	movw	r3, #0
			8: R_ARM_MOVW_ABS_NC	m_RandSeed
   c:	e3403000 	movt	r3, #0
			c: R_ARM_MOVT_ABS	m_RandSeed
  10:	e5932000 	ldr	r2, [r3]
  14:	e306360d 	movw	r3, #26125	; 0x660d
  18:	e3403019 	movt	r3, #25
  1c:	e0020293 	mul	r2, r3, r2
  20:	e30f335f 	movw	r3, #62303	; 0xf35f
  24:	e3433c6e 	movt	r3, #15470	; 0x3c6e
  28:	e0823003 	add	r3, r2, r3
  2c:	e3002000 	movw	r2, #0
			2c: R_ARM_MOVW_ABS_NC	m_RandSeed
  30:	e3402000 	movt	r2, #0
			30: R_ARM_MOVT_ABS	m_RandSeed
  34:	e5823000 	str	r3, [r2]
  38:	e3003000 	movw	r3, #0
			38: R_ARM_MOVW_ABS_NC	m_RandSeed
  3c:	e3403000 	movt	r3, #0
			3c: R_ARM_MOVT_ABS	m_RandSeed
  40:	e5933000 	ldr	r3, [r3]
  44:	e1a032a3 	lsr	r3, r3, #5
  48:	e1a00003 	mov	r0, r3
  4c:	e24bd000 	sub	sp, fp, #0
  50:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
  54:	e12fff1e 	bx	lr

00000058 <wait>:
  58:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
  5c:	e28db000 	add	fp, sp, #0
  60:	e24dd00c 	sub	sp, sp, #12
  64:	e50b0008 	str	r0, [fp, #-8]
  68:	ea000002 	b	78 <wait+0x20>
  6c:	e51b3008 	ldr	r3, [fp, #-8]
  70:	e2433001 	sub	r3, r3, #1
  74:	e50b3008 	str	r3, [fp, #-8]
  78:	e51b3008 	ldr	r3, [fp, #-8]
  7c:	e3530000 	cmp	r3, #0
  80:	1afffff9 	bne	6c <wait+0x14>
  84:	e24bd000 	sub	sp, fp, #0
  88:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
  8c:	e12fff1e 	bx	lr

00000090 <main>:
  90:	e92d4800 	push	{fp, lr}
  94:	e28db004 	add	fp, sp, #4
  98:	e24dd008 	sub	sp, sp, #8
  9c:	e3a03000 	mov	r3, #0
  a0:	e50b3008 	str	r3, [fp, #-8]
  a4:	e3a03000 	mov	r3, #0
  a8:	e50b300c 	str	r3, [fp, #-12]
  ac:	ebfffffe 	bl	0 <Rand>
			ac: R_ARM_CALL	Rand
  b0:	e3a03010 	mov	r3, #16
  b4:	e3453600 	movt	r3, #22016	; 0x5600
  b8:	e3a02955 	mov	r2, #1392640	; 0x154000
  bc:	e5832000 	str	r2, [r3]
  c0:	ebfffffe 	bl	0 <init_uart>
			c0: R_ARM_CALL	init_uart
  c4:	e30806a0 	movw	r0, #34464	; 0x86a0
  c8:	e3400001 	movt	r0, #1
  cc:	ebfffffe 	bl	58 <wait>
			cc: R_ARM_CALL	wait
  d0:	e3a03014 	mov	r3, #20
  d4:	e3453600 	movt	r3, #22016	; 0x5600
  d8:	e51b2008 	ldr	r2, [fp, #-8]
  dc:	e2821001 	add	r1, r2, #1
  e0:	e50b1008 	str	r1, [fp, #-8]
  e4:	e1a02382 	lsl	r2, r2, #7
  e8:	e1e02002 	mvn	r2, r2
  ec:	e5832000 	str	r2, [r3]
  f0:	eafffff3 	b	c4 <main+0x34>
